help
help()
data.frame??
s
s
help(data.frame)
1+1
nhanes <- read.table(file.choose())
View(nhanes)
cat
help(cat)
cat("[LOADED: nhanes data]\n", "Measurements: ", names(nhanes), "\n")
nhanes
cat("[LOADED: nhanes data]\n", "Measurements: ", names(nhanes), "\n")
nhanes$sex
hist(nhanes$height, xlab = "Height (cm)", main = "Height Histogram")
nhanes$height
h <- hist(nhanes$height[nhanes$sex == 1], col = rgb(1, 0, 0, 0.5), xlab = "Height (cm)", main = "Height Histogram")
hist(nhanes$height[nhanes$sex == 2], col = rgb(0, 0, 1, 0.5), breaks = length(h$breaks), add = T)
help(hist)
T
h$breaks
legend(x = 200, y = 2000, legend = c("Male", "Female"), fill = c(rgb(1, 0, 0, 0.5), rgb(0, 0, 1, 0.5)))
hist(nhanes$height[nhanes$sex == 2], col = rgb(0, 0, 1, 0.5), breaks = length(h$breaks), xlab = "Height (cm)", main = "Female Height")
hist(nhanes$height[nhanes$sex == 2], col = rgb(0, 0, 1, 0.5), xlab = "Height (cm)", main = "Female Height")
is
help(is)
is.na()
help(ns.is)
help(is.na)
idx <- which(!is.na(nhanes$height))
h <- hist(nhanes$height, xlab = "Height (cm)", main = "Height Histogram (ALL)")
ph <- par("usr")
help(par)
cc <- par("xlog")
ph
n <- 10
for(i in 1:10){}
1:10
n <- 10
for(i in 1:10) {
sub_idx <- sample(idx, n, rep=TRUE)
hist(nhanes$height[sub_idx], breaks = h$breaks, xlim = c(ph[1], ph[2]),
xlab = "Height (cm)", main = paste("Height Histogram, Subsample ", i, ", N = ", n, sep = ""))
readline()
}
n <- 10
for(i in 1:10) {
sub_idx <- sample(idx, n, rep=TRUE)
hist(nhanes$height[sub_idx], breaks = h$breaks, xlim = c(ph[1], ph[2]),
xlab = "Height (cm)", main = paste("Height Histogram, Subsample ", i, ", N = ", n, sep = ""),add=T)
readline()
}
n <- 10
for(i in 1:10) {
sub_idx <- sample(idx, n, rep=TRUE)
hist(nhanes$height[sub_idx], breaks = h$breaks, xlim = c(ph[1], ph[2]),
xlab = "Height (cm)", main = paste("Height Histogram, Subsample ", i, ", N = ", n, sep = ""),add=T)
readline()
}
n <- 10
for(i in 1:10) {
sub_idx <- sub_idx+sample(idx, n, rep=TRUE)
hist(nhanes$height[sub_idx], breaks = h$breaks, xlim = c(ph[1], ph[2]),
xlab = "Height (cm)", main = paste("Height Histogram, Subsample ", i, ", N = ", n, sep = ""))
readline()
}
mu <- 0; v <- 1;
x <- seq(-4, 4, 0.1)
pdf <- exp(-0.5 * (x - mu)^2 / v) / sqrt(2 * pi * v)
cdf <- pnorm(x, mean = mu, sd = sqrt(v))
plot(x, pdf, type = "l", col = "blue", lwd = 5, main = paste("Density N(", mu, ", ", v, ")", sep = ""))
plot(x, cdf, type = "l", col = "blue", lwd = 5, main = paste("Distribution N(", mu, ", ", v, ")", sep = ""))
x <- seq(0, 1, 0.1)
pdf <- rep(1, length(x))
cdf <- x
plot(x, pdf, type = "l", col = "blue", lwd = 5, ylim = c(0, 1), main = paste("Density U(", 0, ", ", 1, ")", sep = ""))
plot(x, cdf, type = "l", col = "blue", lwd = 5, ylim = c(0, 1), main = paste("Distribution U(", 0, ", ", 1, ")", sep = ""))
help(readline)
readline()
n_U <- 1000
f <- 1
for (i in 1:10) {
d_U <- matrix(nrow = i * f, ncol = n_U)
for (j in 1:n_U) {
d_U[, j] <- runif(i * f)
}
m_U <- colMeans(d_U)
hist(m_U, xlab = "Average", xlim = c(0, 1), breaks = 10, main = paste("Average of", i * f, "uniform random variables"))
#qqnorm(m_U, ylim = c(0, 1))
#qqline(m_U)
readline()
}
help(runif)
mu <- c(0, 0, 0, -1, 3, 3, 3); v <- c(1, 3, 50, 1, 0.1, 0.01, 0.001)
x <- seq(-6, 6, 0.1)
for (i in seq_along(mu)) {
pdf <- exp(-0.5 * (x - mu[i])^2 / v[i]) / sqrt(2 * pi * v[i])
plot(x, pdf, type = "l", col = "blue", lwd = 5, main = paste("Density N(", mu[i], ", ", v[i], ")", sep = ""))
readline()
}
mu <- c(0, 0, 0, -1, 3, 3, 3); v <- c(1, 3, 50, 1, 0.1, 0.01, 0.001)
x <- seq(-6, 6, 0.1)
for (i in seq_along(mu)) {
pdf <- exp(-0.5 * (x - mu[i])^2 / v[i]) / sqrt(2 * pi * v[i])
plot(x, pdf, type = "l", col = "blue", lwd = 5, main = paste("Density N(", mu[i], ", ", v[i], ")", sep = ""))
readline()
}
nhanes <- read.table(file.choose())
cat("[LOADED: nhanes data]\n", "Measurements: ", names(nhanes), "\n")
cdf <- pnorm(x, mean = mu_hat, sd = sqrt(v_hat))
plot(x, cdf, type = "l", col = "blue", lwd = 5, ylim = c(0, 1), main = sprintf("Distribution N(%.1f, %.1f)", mu_hat, v_hat))
cdf_hat <- ecdf(nhanes$height)
plot(cdf_hat, xlab = "Height (cm)", main = "Empirical cdf")
lines(x, cdf, col = "blue", lwd = 5)
qqnorm(nhanes$height)
qqline(nhanes$height)
help(qqnorm)
qqnorm(nhanes$height)
help(qqnorm)
hist(nhanes$height)
plot(nhanes$height[nhanes$sex == 1], nhanes$weight[nhanes$sex == 1], col = rgb(1, 0, 0, 0.5), xlab = "Height (cm)", ylab = "Weigth (kg)", main = "Height vs. Weight scatterplot")
points(nhanes$height[nhanes$sex == 2], nhanes$weight[nhanes$sex == 2], col = rgb(0, 0, 1, 0.5))
x <- seq(min(nhanes$height, na.rm = TRUE), max(nhanes$height, na.rm = TRUE), 0.1)
x
mu_hat <- mean(nhanes$height, na.rm = TRUE)
v_hat <- var(nhanes$height, na.rm = TRUE)
c
help(c)
mu_hat
mu <- c(120, 190, 170, mu_hat)
mu
v <- c(10, 500, 3, v_hat)
n <- sum(!is.na(nhanes$height))
hist(nhanes$height, prob = TRUE, col = "grey", xlab = "Height (cm)")
help(par)
p_plot <- par("usr")
p_plot
help(par)
for (i in seq_along(mu)) {
pdf <- exp(-0.5 * (x - mu[i])^2 / v[i]) / sqrt(2 * pi * v[i])
#pdf <- pdf / max(pdf) * p_plot[4]
score <- -0.5 * (n * log(2 * pi * v[i]) + sum((nhanes$height - mu[i])^2 / v[i], na.rm = TRUE))
hist(nhanes$height, prob = TRUE, ylim = c(0, 0.045), col = "grey", xlab = "Height (cm)", main = sprintf("Score = %.2f", score))
lines(x, pdf, col = "blue", lwd = 5)
readline()
}
cdf <- pnorm(x, mean = mu_hat, sd = sqrt(v_hat))
plot(x, cdf, type = "l", col = "blue", lwd = 5, ylim = c(0, 1), main = sprintf("Distribution N(%.1f, %.1f)", mu_hat, v_hat))
cdf_hat <- ecdf(nhanes$height)
plot(cdf_hat, xlab = "Height (cm)", main = "Empirical cdf")
cdf <- pnorm(x, mean = mu_hat, sd = sqrt(v_hat))
plot(x, cdf, type = "l", col = "blue", lwd = 5, ylim = c(0, 1), main = sprintf("Distribution N(%.1f, %.1f)", mu_hat, v_hat))
lines(x, cdf, col = "blue", lwd = 5)
plot(cdf_hat, xlab = "Height (cm)", main = "Empirical cdf")
lines(x, cdf, col = "blue", lwd = 5)
qqnorm(nhanes$height)
qqline(nhanes$height)
help(qqnorm)
qqnorm(nhanes$height)
qqline(nhanes$height)
q<-qqnorm(nhanes$height)
q
help(qqplot)
help(qqline)
n <- 40
theta <- 0.2
x   <- 0:n
pmf <- dbinom(x, n, theta)
plot(x, pmf, col = "blue", lwd = 5, main = paste("Probability P(", n, ", ", theta, ")", sep = ""))
pmf
n <- 40
theta <- 0.5
x   <- 0:n
pmf <- dbinom(x, n, theta)
x_obs <- 15
x_test <- 0:x_obs
pmf_test <- dbinom(x_test, n, theta)
sum_x <- sum(pmf_test)
plot(x, pmf, col = "blue", lwd = 5, main = paste("Probability P(", n, ", ", theta, ")", sep = ""))
points(x_test, pmf_test, col = "red", lwd = 7)
sum_x
n <- 40
theta <- 0.5
x   <- 0:n
pmf <- dbinom(x, n, theta)
x_obs <- 20
x_test <- 0:x_obs
pmf_test <- dbinom(x_test, n, theta)
sum_x <- sum(pmf_test)
plot(x, pmf, col = "blue", lwd = 5, main = paste("Probability P(", n, ", ", theta, ")", sep = ""))
points(x_test, pmf_test, col = "red", lwd = 7)
sum_x
sigma <- matrix(c(20,0,0,20), c(2,2))
sigma
help(matrix)
solve
help(solve)
sSigma <- solve(sigma)
sSigma
View(sigma)
View(sigma)
s<-matrix(c(20,0,0,20))
s
library(MASS)
Sigma <- matrix(c(10,3,3,2),2,2)
Sigma
mvrnorm(n=1000, rep(0, 2), Sigma)
mvrnorm(n=1000, rep(0, 2), Sigma)
mvrnorm(n=1000, rep(0, 2), Sigma)
mvrnorm(n=1000, rep(0, 2), Sigma)
mvrnorm(n=1000, rep(0, 2), Sigma)
mvrnorm(n=1000, rep(0, 2), Sigma)
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 0), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
rep()
help(rep)
Sigma <- matrix(c(10,0,0,2),2,2)
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=1000, rep(0, 2), Sigma))
hist(mvrnorm(n=100000, rep(0, 2), Sigma))
hist(mvrnorm(n=100000, rep(0, 2), Sigma))
Sigma <- matrix(c(10,10,10,2),2,2)
hist(mvrnorm(n=100000, rep(0, 2), Sigma))
Sigma
Sigma <- matrix(c(10,3,4,2),2,2)
hist(mvrnorm(n=100000, rep(0, 2), Sigma))
help(nvrnorm)
??nvrnorm
Sigma <- matrix(c(10,3,3,2),2,2)
Sigma
ls
load("twin_data.RDa") # Data adapted from https://arxiv.org/pdf/0707.3794.pdf
twin_table <- table(twin_data$`Twin 1 Alcohol dependence`, twin_data$`Twin 2 Depression`)
chisq.test(twin_table)
twin_table <- table(twin_data$`Twin 2 Alcohol dependence`, twin_data$`Twin 1 Depression`)
chisq.test(twin_table)
cd('/Users/shoujiafeng/Desktop/UCL_DSML_note/STAT0032_Statistical_Data_Science')
cd /Users/shoujiafeng/Desktop/UCL_DSML_note/STAT0032_Statistical_Data_Science
load("twin_data.RDa") # Data adapted from https://arxiv.org/pdf/0707.3794.pdf
twin_table <- table(twin_data$`Twin 1 Alcohol dependence`, twin_data$`Twin 2 Depression`)
chisq.test(twin_table)
twin_table <- table(twin_data$`Twin 2 Alcohol dependence`, twin_data$`Twin 1 Depression`)
chisq.test(twin_table)
setwd('/Users/shoujiafeng/Desktop/UCL_DSML_note/STAT0032_Statistical_Data_Science')
load("twin_data.RDa") # Data adapted from https://arxiv.org/pdf/0707.3794.pdf
twin_table <- table(twin_data$`Twin 1 Alcohol dependence`, twin_data$`Twin 2 Depression`)
chisq.test(twin_table)
twin_table <- table(twin_data$`Twin 2 Alcohol dependence`, twin_data$`Twin 1 Depression`)
chisq.test(twin_table)
View(twin_data)
twin_data
twin_table
twin_table <- table(twin_data$`Twin 1 Alcohol dependence`, twin_data$`Twin 2 Depression`)
chisq.test(twin_table)
twin_table <- table(twin_data$`Twin 2 Alcohol dependence`, twin_data$`Twin 1 Depression`)
chisq.test(twin_table)
n <- 50
num_rep <- 20
m <- rep(0, num_rep)
true_mean <- 168
true_var <- 103
for (i in 1:num_rep) {
dat <- rnorm(n, mean = true_mean, sd = sqrt(true_var))
m[i] <- mean(dat)
}
library(ggplot2) # Available from CRAN
library(gridExtra)
df_sim <- data.frame(x = 1:num_rep, y = m)
g <- ggplot(df_sim, aes(x = reorder(rownames(df_sim), 1:num_rep), y = y)) +
geom_point(size = 2) + geom_hline(yintercept = true_mean) +
coord_flip() + xlab("Dataset") + ylab(expression(hat(mu))) + ylim(164, 171) +
theme(axis.title.x = element_text(face = "bold", size = 20), axis.title.y = element_text(face = "bold", size = 20))
grid.arrange(g, ncol = 1)
library(ggplot2) # Available from CRAN
library(gridExtra)
install.packages("caret", dep="TRUE")
library(ggplot2) # Available from CRAN
library(gridExtra)
install.packages("ggplot")
install.packages("ggplot")
install.packages("caret", dependencies = c("Depends", "Imports", "Suggests"))
